version: 1
frontend:
  phases:
    preBuild:
      commands:
        - 'echo "Starting build process for environment: ${ENVIRONMENT}"'
        - cd frontend
        # Remove the .babelrc creation as we'll handle this through package.json
        - npm cache clean --force
        - npm install
        - npm install -D @babel/plugin-transform-private-property-in-object @babel/plugin-proposal-private-property-in-object
        - npm install -g react-scripts
        - cd ../backend
        - npm ci
        - cd ../frontend
    build:
      commands:
        - 'echo "Building frontend"'
        - export NODE_ENV=production
        - export CI=false
        - |
          if [ "${ENVIRONMENT}" = "testing" ]; then
            export REACT_APP_API_BASE_URL=https://testing.contactvalidate.com/api
          else
            export REACT_APP_API_BASE_URL=https://app.contactvalidate.com/api
          fi
        - 'echo "Environment variables set:"'
        - 'echo "NODE_ENV: $NODE_ENV"'
        - 'echo "REACT_APP_API_BASE_URL: $REACT_APP_API_BASE_URL"'
        - npm run build
        - cd ../backend
        - mkdir -p dist
        - |
          cp server.js server-config.js package.json package-lock.json ./dist/ && \
          cd dist && \
          npm ci --omit=dev && \
          echo "exports.handler = require('./server.js').handler;" > index.js
        - 'echo "Backend build completed"'
  artifacts:
    baseDirectory: frontend/build
    files:
      - '**/*'
      - '../backend/dist/index.js'
      - '../backend/dist/server.js'
      - '../backend/dist/server-config.js'
      - '../backend/dist/package.json'
      - '../backend/dist/package-lock.json'
      - '../backend/dist/node_modules/**/*'
  cache:
    paths:
      - node_modules/**/*
      - frontend/node_modules/**/*
      - backend/node_modules/**/*
      - /root/.npm/**/*
  customRules:
    - source: '/api/*'
      target: '/backend/dist/index.js'
      status: '200'
    - source: '/*'
      target: '/index.html'
      status: '200'